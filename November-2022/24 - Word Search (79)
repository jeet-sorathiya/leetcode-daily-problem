class Solution {
public:
    bool solve(int i, int j, vector<vector<char>> &board, int rows, int cols, vector<vector<int>> &visited,
     string &word, int k) {
         if(k == word.size()) return true;
         if(i < 0 || i == rows || j < 0 || j == cols || board[i][j] != word[k]) {
             return false;
         }
         if(visited[i][j] == 1) return false;
         visited[i][j] = 1;
         int xdir[4] = {1,-1, 0, 0};
         int ydir[4] = {0, 0, -1, 1};
         for(int d = 0; d < 4; d++) {
            if(solve(i+xdir[d], j+ydir[d], board, rows, cols, visited, word, k+1))
                return true;
         }
         visited[i][j] = 0;
         return false;
    }

    bool exist(vector<vector<char>>& board, string word) {
        int rows = board.size(), cols = board[0].size();
        vector<vector<int>> visited(rows, vector<int> (cols, 0));
        string temp;
        for(int i = 0; i < rows; i++) {
            for(int j = 0; j < cols; j++) {
                if(solve(i, j, board, rows, cols, visited, word, 0))
                    return true;
            }
        }
        return false;
    }
};
